package com.bluebell.platform.cleaners.impl;

import java.io.File;
import java.io.IOException;
import java.nio.file.Files;
import java.nio.file.Path;
import java.nio.file.Paths;
import java.nio.file.StandardOpenOption;
import java.util.ArrayList;
import java.util.List;

import com.bluebell.platform.cleaners.Cleaner;
import com.bluebell.platform.util.DirectoryUtil;
import lombok.extern.slf4j.Slf4j;
import org.apache.commons.lang3.StringUtils;

/**
 * Cleans up code generated by api examples cleaner
 *
 * @author Stephen Prizio
 * @version 0.1.0
 */
@Slf4j
public class GenerateApiExamplesCleaner implements Cleaner {


    //  METHODS

    /**
     * Cleans up the code generated for api examples
     *
     * @param args system arguments
     */
    public static void main(String[] args) {

        LOGGER.info("Cleaning module-info.java before code generation...");

        try {

            Path moduleInfoPath = Paths.get(
                    DirectoryUtil.getBaseProjectDirectory().replace(File.separator + "greenhouse", StringUtils.EMPTY),
                    "greenhouse",
                    "processing",
                    "src", "main", "java",
                    "module-info.java"
            );

            if (!Files.exists(moduleInfoPath)) {
                throw new IOException("module-info.java does not exist");
            }

            final List<String> lines = new ArrayList<>(Files.readAllLines(moduleInfoPath));
            final List<String> linesToRemove = new ArrayList<>();
            for (int i = 0; i < lines.size() - 1; i++) {
                if (lines.get(i).trim().contains("auto-generated")) {
                    linesToRemove.add(lines.get(i));
                    linesToRemove.add(lines.get(i + 1));
                }
            }

            linesToRemove.forEach(lines::remove);
            Files.write(moduleInfoPath, lines, StandardOpenOption.TRUNCATE_EXISTING);

            LOGGER.info("Dependencies successfully cleaned.");
        } catch (IOException e) {
            LOGGER.error(e.getMessage(), e);
            System.exit(1);
        }
    }
}
