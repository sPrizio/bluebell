services:
  db:
    image: postgres:16
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=admin
      - POSTGRES_DB=bluebell
    volumes:
      - postgres-data:/var/lib/postgresql/data
      - ./greenhouse/db/init.sql:/docker-entrypoint-initdb.d/init.sql
    ports:
      - "3307:5432"
    healthcheck:
      test: [ "CMD", "pg_isready", "-U", "postgres" ]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s

  greenhouse:
    build:
      context: .
      dockerfile: greenhouse/Dockerfile
      args:
        - SPRING_PROFILES_ACTIVE=${SPRING_PROFILE:-staging}
    image: ghcr.io/sprizio/bluebell/greenhouse:${TAG:-latest}
    ports:
      - "8080:8080"
    environment:
      - SPRING_DATASOURCE_URL=jdbc:mariadb://db:3306/bluebell
      - SPRING_DATASOURCE_USERNAME=admin
      - SPRING_DATASOURCE_PASSWORD=nimda
      - SPRING_PROFILES_ACTIVE=${SPRING_PROFILE:-staging}
    depends_on:
      db:
        condition: service_healthy
    mem_limit: 8g
    
  sepal:
    build:
      context: .
      dockerfile: flower/sepal/Dockerfile
      args:
        - FLOWER_PROFILE=${FLOWER_PROFILE:-staging}
    image: ghcr.io/sprizio/bluebell/sepal:${TAG:-latest}
    ports:
      - "3000:3000"
    environment:
      - FLOWER_PROFILE=${FLOWER_PROFILE:-staging}
    depends_on:
      greenhouse:
        condition: service_started

  petal:
    build:
      context: .
      dockerfile: flower/petal/Dockerfile
    image: ghcr.io/sprizio/bluebell/petal:${TAG:-latest}
    ports:
      - "4000:4000"
    depends_on:
      greenhouse:
        condition: service_started
volumes:
  postgres-data:
