name: bluebell - Generate Release

on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:
    inputs:
      version:
        description: 'Version to release (ex: v0.2.0)'
        required: true

jobs:
  release:
    runs-on: ubuntu-22.04

    steps:
      - name: "[bluebell] - Checkout Repo"
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: "[bluebell] - Determine Version"
        id: vars
        run: |
          VERSION=${{ github.event.inputs.version || github.ref_name }}
          echo "VERSION=$VERSION" >> $GITHUB_ENV
          echo "version=$VERSION" >> $GITHUB_OUTPUT

      - name: "[greenhouse] - Set up JDK 17"
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: "[greenhouse] - Build"
        run: mvn clean package -DskipTests=true
        working-directory: './greenhouse'

      - name: "[sepal] - Set up Node.js"
        uses: actions/setup-node@v4
        with:
          node-version: '22.x'
          cache: 'npm'
          cache-dependency-path: './flower/sepal/package-lock.json'

      - name: "[sepal] - Install Dependencies"
        run: npm ci
        working-directory: './flower/sepal'

      - name: "[sepal] - Build"
        run: npm run build --if-present
        working-directory: './flower/sepal'

      - name: "[petal] - Set up Node.js"
        uses: actions/setup-node@v4
        with:
          node-version: '22.x'
          cache: 'npm'
          cache-dependency-path: './flower/petal/package-lock.json'

      - name: "[petal] - Install Dependencies"
        run: npm ci
        working-directory: './flower/petal'

      - name: "[petal] - Build"
        run: npm run build --if-present
        working-directory: './flower/petal'

      - name: "[bluebell] - Log in to GitHub Container Registry"
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: "[bluebell] - Build and Push Docker Image"
        run: |
          IMAGE_NAME=ghcr.io/${{ github.repository }}/bluebell
          docker build -t $IMAGE_NAME:${{ env.VERSION }} .
          docker tag $IMAGE_NAME:${{ env.VERSION }} $IMAGE_NAME:latest
          docker push $IMAGE_NAME:${{ env.VERSION }}
          docker push $IMAGE_NAME:latest

      - name: "[bluebell] - Create GitHub Release"
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ env.VERSION }}
          name: bluebell ${{ env.VERSION }}
          generate_release_notes: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: "[bluebell] - Create GitHub Discussion"
        run: |
          curl -X POST https://api.github.com/repos/${{ github.repository }}/discussions \
            -H "Authorization: Bearer ${{ secrets.GH_PAT_DISCUSSIONS }}" \
            -H "Accept: application/vnd.github.v3+json" \
            -d '{
              "title": "ðŸŽ‰ Release ${{ env.VERSION }} is live!",
              "body": "Check out the [release notes](https://github.com/${{ github.repository }}/releases/tag/${{ env.VERSION }}) for full details.\n\nLet us know your thoughts below ðŸ‘‡",
              "category_id": "${{ secrets.GH_PAT_DISCUSSIONS_TARGET_ID }}"
            }'
